%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% /**
%  * Copyright (C) 2018 
%  * @author: Ahmad Gazar
%  * Permission is granted to copy, distribute, and/or modify this program
%  * under the terms of the GNU General Public License, version 2 or any
%  * later version published by the Free Software Foundation.
%  * This program is distributed in the hope that it will be useful, but
%  * WITHOUT ANY WARRANTY; without even the implied warranty of
%  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
%  * Public License for more details
%  */

%% plot CoM desired, measured and error

time          = comData.time;
N             = 3;
C             = linspecer(N);


% Desired CoM
com_desired_x = comData.signals(2).values(1,:,:);
com_desired_x = reshape(com_desired_x, size(com_desired_x,3),1);

com_desired_y = comData.signals(2).values(2,:,:);
com_desired_y = reshape(com_desired_y, size(com_desired_y,3),1);

com_desired_z = comData.signals(2).values(3,:,:);
com_desired_z = reshape(com_desired_z, size(com_desired_z,3),1);

% Measued CoM
com_measured_x = comData.signals(1).values(1,:,:);
com_measured_x = reshape(com_measured_x, size(com_measured_x,3),1);

com_measured_y = comData.signals(1).values(2,:,:);
com_measured_y = reshape(com_measured_y, size(com_measured_y,3),1);

com_measured_z = comData.signals(1).values(3,:,:);
com_measured_z = reshape(com_measured_z, size(com_measured_z,3),1);

% Error =  Desired CoM - Measured CoM
com_error_x    =  com_measured_x - com_desired_x;
com_error_y    =  com_measured_y - com_desired_y;
com_error_z    =  com_measured_z - com_desired_z;

% state
state          =  comData.signals(4).values(:);

figure('rend','painters','pos',[10 10 600 520]);
ax1            = subplot(4,1,1); % CoM desired subplot
plot(time, com_desired_x,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, com_desired_y, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, com_desired_z,'Color', C(3,:), 'linewidth',2)

title('CoM Desired Trajectory',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


legend({'$x_d$', '$y_d$', '$z_d$'}, ...
'Location','EastOutside', ...
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

grid on

ax2            = subplot(4,1,2); %CoM measured subplot
plot(time, com_measured_x,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, com_measured_y, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, com_measured_z,'Color', C(3,:), 'linewidth',2)

grid on

title('CoM Measured Trajectory',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$x$', '$y$', '$z$'}, ...
'Location','EastOutside', ...
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


ax3            = subplot(4,1,3); %CoM error subplot
plot(time, com_error_x,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, com_error_y, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, com_error_z,'Color', C(3,:), 'linewidth',2)

title('CoM Error',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$\tilde{x}$', '$\tilde{y}$', '$\tilde{z}$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

grid on
ylabel('[m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 CoM.eps

%% plot contact wrenches desired, estimated, error
N = 6;
C = linspecer(N);

% desired left foot wrenches
left_F_x            = FORCES.signals(5).values(:,1);

left_F_y            = FORCES.signals(5).values(:,2);

left_F_z            = FORCES.signals(5).values(:,3);

left_M_x            = FORCES.signals(5).values(:,4);

left_M_y            = FORCES.signals(5).values(:,5);

left_M_z            = FORCES.signals(5).values(:,6);

% estimated left foot wrenches
left_F_x_estimated  = FORCES.signals(1).values(:,1);

left_F_y_estimated  = FORCES.signals(1).values(:,2);

left_F_z_estimated  = FORCES.signals(1).values(:,3);

left_M_x_estimated  = FORCES.signals(1).values(:,4);

left_M_y_estimated  = FORCES.signals(1).values(:,5);

left_M_z_estimated  = FORCES.signals(1).values(:,6);

% Error between estimated and esired left contact wrenches
left_F_x_error      = FORCES.signals(3).values(:,1);

left_F_y_error      = FORCES.signals(3).values(:,2);

left_F_z_error      = FORCES.signals(3).values(:,3);

left_M_x_error      = FORCES.signals(3).values(:,4);

left_M_y_error      = FORCES.signals(3).values(:,5);

left_M_z_error      = FORCES.signals(3).values(:,6);


% desired right foot wrenches
right_F_x           = FORCES.signals(6).values(:,1);

right_F_y           = FORCES.signals(6).values(:,2);

right_F_z           = FORCES.signals(6).values(:,3);

right_M_x           = FORCES.signals(6).values(:,4);

right_M_y           = FORCES.signals(6).values(:,5);

right_M_z           = FORCES.signals(5).values(:,6);

% estimated right foot wrenches
right_F_x_estimated = FORCES.signals(2).values(:,1);

right_F_y_estimated = FORCES.signals(2).values(:,2);

right_F_z_estimated = FORCES.signals(2).values(:,3);

right_M_x_estimated = FORCES.signals(2).values(:,4);

right_M_y_estimated = FORCES.signals(2).values(:,5);

right_M_z_estimated = FORCES.signals(2).values(:,6);

% Error between estimated and esired right contact wrenches
right_F_x_error     = FORCES.signals(4).values(:,1);

right_F_y_error     = FORCES.signals(4).values(:,2);

right_F_z_error     = FORCES.signals(4).values(:,3);

right_M_x_error     = FORCES.signals(4).values(:,4);

right_M_y_error     = FORCES.signals(4).values(:,5);

right_M_z_error     = FORCES.signals(4).values(:,6);

% state
state               = comData.signals(4).values(:);

figure('rend','painters','pos',[10 10 600 520]);
ax1                 = subplot(4,1,1); % left desired wrenches subplot
plot(time, left_F_x,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_F_y, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_F_z,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_M_x,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, left_M_y, 'Color',C(5,:), 'linewidth',2)
hold on
plot(time, left_M_z,'Color', C(6,:), 'linewidth',2)
legend('F_x','F_y','F_z', 'M_x', 'M_y', 'M_z')

grid on
title('Desired contact wrenches left foot',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$F_x$', '$F_y$', '$F_z$', '$M_x$', '$M_y$', '$M_z$'}, ...
'Location','EastOutside', ...   
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[N/N.m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax2                 = subplot(4,1,2); % left estimated wrenches subplot
plot(time, left_F_x_estimated,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_F_y_estimated, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_F_z_estimated,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_M_x_estimated,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, left_M_y_estimated, 'Color',C(5,:), 'linewidth',2)
hold on
plot(time, left_M_z_estimated,'Color', C(6,:), 'linewidth',2)
grid on

title('Estimated contact wrenches left foot',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


legend({'$F_x$', '$F_y$', '$F_z$', '$M_x$', '$M_y$', '$M_z$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[N/N.m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax3                 = subplot(4,1,3); % left wrenches error subplot
plot(time, left_F_x_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_F_y_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_F_z_error,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_M_x_error,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, left_M_y_error, 'Color',C(5,:), 'linewidth',2)
hold on
plot(time, left_M_z_error,'Color', C(6,:), 'linewidth',2)

title('Contact wrench errors left foot',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$F_x$', '$F_y$', '$F_z$', '$M_x$', '$M_y$', '$M_z$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[N/N.m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


xlabel('Time [s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

grid on
print -depsc2 Contact_wrenches_left.eps


figure('rend','painters','pos',[10 10 600 520]);
ax1                 = subplot(4,1,1); % right desired wrenches subplot
plot(time, right_F_x,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_F_y, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_F_z,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_M_x,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, right_M_y, 'Color',C(5,:), 'linewidth',2)
hold on
plot(time, right_M_z,'Color', C(6,:), 'linewidth',2)
legend('F_x','F_y','F_z', 'M_x', 'M_y', 'M_z')

grid on
title('Desired contact wrenches right foot',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$F_x$', '$F_y$', '$F_z$', '$M_x$', '$M_y$', '$M_z$'}, ...
'Location','EastOutside', ...   
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[N/N.m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax2                 = subplot(4,1,2); % right estimated wrenches subplot
plot(time, right_F_x_estimated,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_F_y_estimated, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_F_z_estimated,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_M_x_estimated,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, right_M_y_estimated, 'Color',C(5,:), 'linewidth',2)
hold on
plot(time, right_M_z_estimated,'Color', C(6,:), 'linewidth',2)
grid on

title('Estimated contact wrenches right foot',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


legend({'$F_x$', '$F_y$', '$F_z$', '$M_x$', '$M_y$', '$M_z$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[N/N.m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')
grid on

ax3                 = subplot(4,1,3); % right wrenches error subplot
plot(time, right_F_x_error, time, right_F_y_error, time, right_F_z_error, time, right_M_x_error, time, right_M_y_error, time, right_M_z_error)
plot(time, right_F_x_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_F_y_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_F_z_error,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_M_x_error,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, right_M_y_error, 'Color',C(5,:), 'linewidth',2)
hold on
plot(time, right_M_z_error,'Color', C(6,:), 'linewidth',2)
title('Contact wrench errors right foot',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


legend({'$F_x$', '$F_y$', '$F_z$', '$M_x$', '$M_y$', '$M_z$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')
grid on

ylabel('[N/N.m]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

xlabel('Time [s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 Contact_wrenches_right.eps


%% plot linear and angular momentum errors
time                    = error_H_linear.time;

% linear momentum error
linear_momentum_error_x = error_H_linear.signals(1).values(:,1);
linear_momentum_error_y = error_H_linear.signals(1).values(:,2);
linear_momentum_error_z = error_H_linear.signals(1).values(:,3);

% angular momentum error
angular_momentum_error_x = error_H_angular.signals(1).values(:,1);
angular_momentum_error_y = error_H_angular.signals(1).values(:,2);
angular_momentum_error_z = error_H_angular.signals(1).values(:,3);

figure('rend','painters','pos',[10 10 600 520]);
ax1 = subplot(2,1,1); % linear momentum errors subplot
plot(time, linear_momentum_error_x, time, linear_momentum_error_y, time, linear_momentum_error_z)
grid on

title('Linear Momentum Error',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$x$', '$y$', '$z$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[kg.m/s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax2 = subplot(2,1,2); % angular momentum errors subplot
plot(time, angular_momentum_error_x, time, angular_momentum_error_y, time, angular_momentum_error_z)
grid on
title(ax2,'angular momentum error')
legend('$x$','$y$','$z$')
title('Angular Momentum Error',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'$\alpha$', '$\beta$', '$\gamma$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[kg.m^2/s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 momentum_error.eps

%% plot postural task joint errors
N = 6;
C = linspecer(N);

time                       = jointErrorData.time;

% Torso joint errors
torso_roll_error           = jointErrorData.signals  (1).values(:,1);
torso_pitch_error          = jointErrorData.signals  (1).values(:,2);
torso_yaw_error            = jointErrorData.signals  (1).values(:,3);

% left arm joint errors
left_shoulder_roll_error   = jointErrorData.signals  (2).values(:,1);
left_shoulder_pitch_error  = jointErrorData.signals  (2).values(:,2);
left_shoulder_yaw_error    = jointErrorData.signals  (2).values(:,3);
left_elbow_error           = jointErrorData.signals  (2).values(:,4);

% right arm joint errors
right_shoulder_roll_error  = jointErrorData.signals  (3).values(:,1);
right_shoulder_pitch_error = jointErrorData.signals  (3).values(:,2);
right_shoulder_yaw_error   = jointErrorData.signals  (3).values(:,3);
right_elbow_error          = jointErrorData.signals  (3).values(:,4);

% left leg joint errors
left_hip_roll_error        = jointErrorData.signals  (4).values(:,1);
left_hip_pitch_error       = jointErrorData.signals  (4).values(:,2);
left_hip_yaw_error         = jointErrorData.signals  (4).values(:,3);
left_knee_error            = jointErrorData.signals  (4).values(:,4);
left_ankle_roll_error      = jointErrorData.signals  (4).values(:,5);
left_ankle_pitch_error     = jointErrorData.signals  (4).values(:,6);

% right leg joint errors
right_hip_roll_error       = jointErrorData.signals  (5).values(:,1);
right_hip_pitch_error      = jointErrorData.signals  (5).values(:,2);
right_hip_yaw_error        = jointErrorData.signals  (5).values(:,3);
right_knee_error           = jointErrorData.signals  (5).values(:,4);
right_ankle_roll_error     = jointErrorData.signals  (5).values(:,5);
right_ankle_pitch_error    = jointErrorData.signals  (5).values(:,6);

% state
state                      =  comData.signals(4).values(:);

figure('rend','painters','pos',[10 10 600 520]);
ax1                        = subplot(4,1,1); % Torso joint errors subplot

plot(time, torso_roll_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, torso_pitch_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, torso_yaw_error,'Color', C(3,:), 'linewidth',2)

grid on
title('Torso joint errors',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Torso $\alpha$', 'Torso $\beta$', 'Torso $\gamma$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\theta$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax2                        = subplot(4,1,2); % left arm joint errors subplot
plot(time, left_shoulder_roll_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_shoulder_pitch_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_shoulder_yaw_error,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_elbow_error,'Color', C(4,:), 'linewidth',2)

grid on
title('Left arm joint errors',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Shoulder $\alpha$', 'Shoulder $\beta$', 'Shoulder $\gamma$', 'Elbow $\alpha$'}, ...
'Location','EastOutside', ...
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\theta$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax3                        = subplot(4,1,3); % right arm joint errors subplot
plot(time, right_shoulder_roll_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_shoulder_pitch_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_shoulder_yaw_error,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_elbow_error,'Color', C(4,:), 'linewidth',2)

grid on
title('Right arm joint errors',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Shoulder $\alpha$', 'Shoulder $\beta$', 'Shoulder $\gamma$', 'Elbow $\alpha$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\theta$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

xlabel('Time [s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 postural_task_upper_body.eps


figure('rend','painters','pos',[10 10 600 520]);
ax1                       = subplot(4,1,1); % left leg joint errors subplot
plot(time, left_hip_roll_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_hip_pitch_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_hip_yaw_error,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_knee_error,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, left_ankle_roll_error,'Color', C(5,:), 'linewidth',2)
hold on
plot(time, left_ankle_pitch_error,'Color', C(6,:), 'linewidth',2)
grid on

title('Left leg joint errors',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Hip $\alpha$', 'Hip $\beta$', 'Hip $\gamma$', 'Knee $\alpha$', 'Ankle $\alpha$', 'Ankle $\beta$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\theta$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

ax2                      = subplot(4,1,2); % right leg joint errors subplot
plot(time, right_hip_roll_error,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_hip_pitch_error, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_hip_yaw_error,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_knee_error,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, right_ankle_roll_error,'Color', C(5,:), 'linewidth',2)
hold on
plot(time, right_ankle_pitch_error,'Color', C(6,:), 'linewidth',2)
grid on

title('Right leg joint errors',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Hip $\alpha$', 'Hip $\beta$', 'Hip $\gamma$', 'Knee $\alpha$', 'Ankle $\alpha$', 'Ankle $\beta$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\theta$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

xlabel('Time [s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 postural_task_lower_body.eps

%% plot desired joint torques


time                         = tauDesiredData.time;

% Torso joint errors
torso_roll_desired           = tauDesiredData.signals(1).values(:,1);
torso_pitch_desired          = tauDesiredData.signals(1).values(:,2);
torso_yaw_desired            = tauDesiredData.signals(1).values(:,3);

% left arm joint errors
left_shoulder_roll_desired   = tauDesiredData.signals(2).values(:,1);
left_shoulder_pitch_desired  = tauDesiredData.signals(2).values(:,2);
left_shoulder_yaw_desired    = tauDesiredData.signals(2).values(:,3);
left_elbow_desired           = tauDesiredData.signals(2).values(:,4);

% right arm joint errors
right_shoulder_roll_desired  = tauDesiredData.signals(3).values(:,1);
right_shoulder_pitch_desired = tauDesiredData.signals(3).values(:,2);
right_shoulder_yaw_desired   = tauDesiredData.signals(3).values(:,3);
right_elbow_desired          = tauDesiredData.signals(3).values(:,4);

% left leg joint errors
left_hip_roll_desired        = tauDesiredData.signals(4).values(:,1);
left_hip_pitch_desired       = tauDesiredData.signals(4).values(:,2);
left_hip_yaw_desired         = tauDesiredData.signals(4).values(:,3);
left_knee_desired            = tauDesiredData.signals(4).values(:,4);
left_ankle_roll_desired      = tauDesiredData.signals(4).values(:,5);
left_ankle_pitch_desired     = tauDesiredData.signals(4).values(:,6);

% right leg joint errors
right_hip_roll_desired       = tauDesiredData.signals(5).values(:,1);
right_hip_pitch_desired      = tauDesiredData.signals(5).values(:,2);
right_hip_yaw_desired        = tauDesiredData.signals(5).values(:,3);
right_knee_desired           = tauDesiredData.signals(5).values(:,4);
right_ankle_roll_desired     = tauDesiredData.signals(5).values(:,5);
right_ankle_pitch_desired    = tauDesiredData.signals(5).values(:,6);

% state
state                        =  comData.signals(4).values(:);

figure('rend','painters','pos',[10 10 600 520]);
ax1                          = subplot(4,1,1); % Torso joint errors subplot
plot(time, torso_roll_error, time, torso_pitch_error, time, torso_yaw_error)
title(ax1,'Torso desired joint torques')
legend('roll','pitch','yaw')
grid on

plot(time, torso_roll_desired,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, torso_pitch_desired, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, torso_yaw_desired,'Color', C(3,:), 'linewidth',2)

grid on
title('Torso desired joint torques',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Torso $\alpha$', 'Torso $\beta$', 'Torso $\gamma$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\tau$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


ax2                        = subplot(4,1,2); % left arm joint errors subplot
plot(time, left_shoulder_roll_desired,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_shoulder_pitch_desired, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_shoulder_yaw_desired,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_elbow_desired,'Color', C(4,:), 'linewidth',2)
grid on

title('Left arm joint torques',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Shoulder $\alpha$', 'Shoulder $\beta$', 'Shoulder $\gamma$', 'Elbow $\alpha$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\tau$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')


ax3                       = subplot(4,1,3); % right arm joint errors subplot
plot(time, right_shoulder_roll_desired,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_shoulder_pitch_desired, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_shoulder_yaw_desired,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_elbow_desired,'Color', C(4,:), 'linewidth',2)
grid on

title('Right arm joint torques',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Shoulder $\alpha$', 'Shoulder $\beta$', 'Shoulder $\gamma$', 'Elbow $\alpha$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\tau$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

xlabel('Time [s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 desired_joint_torques_upper_body.eps


figure('rend','painters','pos',[10 10 600 520]);
ax1                       = subplot(3,1,1); % left leg joint errors subplot
plot(time, left_hip_roll_desired,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, left_hip_pitch_desired, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, left_hip_yaw_desired,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, left_knee_desired,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, left_ankle_roll_desired,'Color', C(5,:), 'linewidth',2)
hold on
plot(time, left_ankle_pitch_desired,'Color', C(6,:), 'linewidth',2)
grid on

title('Left leg joint torques',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Hip $\alpha$', 'Hip $\beta$', 'Hip $\gamma$', 'Knee $\alpha$', 'Ankle $\alpha$', 'Ankle $\beta$'}, ...    
'Location','EastOutside', ...
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\tau$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')
grid on

ax2                       = subplot(3,1,2); % right leg joint errors subplot
plot(time, right_hip_roll_desired,'Color', C(1,:), 'linewidth',2)
hold on
plot(time, right_hip_pitch_desired, 'Color',C(2,:), 'linewidth',2)
hold on
plot(time, right_hip_yaw_desired,'Color', C(3,:), 'linewidth',2)
hold on
plot(time, right_knee_desired,'Color', C(4,:), 'linewidth',2)
hold on
plot(time, right_ankle_roll_desired,'Color', C(5,:), 'linewidth',2)
hold on
plot(time, right_ankle_pitch_desired,'Color', C(6,:), 'linewidth',2)
grid on

title('Right leg joint torques',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

legend({'Hip $\alpha$', 'Hip $\beta$', 'Hip $\gamma$', 'Knee $\alpha$', 'Ankle $\alpha$', 'Ankle $\beta$'}, ...
'Location','EastOutside', ...    
'FontUnits','points',...
'interpreter','latex',...
'FontSize',10,...
'FontName','Times')

ylabel('[$\tau$]',...
 'interpreter','latex',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')
grid on

xlabel('Time [s]',...
'FontUnits','points',...
'FontWeight','normal',...
'FontSize',10,...
'FontName','Times')

print -depsc2 desired_joint_torques_lower_body.eps
